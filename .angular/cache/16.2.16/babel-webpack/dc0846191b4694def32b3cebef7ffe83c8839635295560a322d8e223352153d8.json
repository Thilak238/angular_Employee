{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CreateEmployeeComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.employee = new Employee();\n  }\n  ngOnInit() {}\n  onSubmit() {}\n  saveEmployee() {\n    this.employeeService.createEmployee(this.employee).subscribe(data => {\n      console.log(data);\n      this.goToEmployeeList();\n    });\n  }\n  static {\n    this.ɵfac = function CreateEmployeeComponent_Factory(t) {\n      return new (t || CreateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CreateEmployeeComponent,\n      selectors: [[\"app-create-employee\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"emailId\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n      template: function CreateEmployeeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1, \"Create Employee\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function CreateEmployeeComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n          i0.ɵɵtext(5, \"First Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.employee.firstName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n          i0.ɵɵtext(9, \"Last Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.employee.lastName = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n          i0.ɵɵtext(13, \"Email Id\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function CreateEmployeeComponent_Template_input_ngModelChange_14_listener($event) {\n            return ctx.employee.emailId = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"button\", 8);\n          i0.ɵɵtext(16, \"Submit\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Employee","CreateEmployeeComponent","constructor","employeeService","employee","ngOnInit","onSubmit","saveEmployee","createEmployee","subscribe","data","console","log","goToEmployeeList","i0","ɵɵdirectiveInject","i1","EmployeeService","selectors","decls","vars","consts","template","CreateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CreateEmployeeComponent_Template_form_ngSubmit_2_listener","CreateEmployeeComponent_Template_input_ngModelChange_6_listener","$event","firstName","CreateEmployeeComponent_Template_input_ngModelChange_10_listener","lastName","CreateEmployeeComponent_Template_input_ngModelChange_14_listener","emailId","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\thila\\angular-Emp\\src\\app\\create-employee\\create-employee.component.ts","C:\\Users\\thila\\angular-Emp\\src\\app\\create-employee\\create-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n  employee : Employee = new Employee();\n\n  constructor(private employeeService : EmployeeService) { }\n  ngOnInit(): void {  \n  \n  }\n  onSubmit(){\n\n  }\n  saveEmployee(){\n    this.employeeService.createEmployee(this.employee).subscribe(data => {\n      console.log(data);\n      this.goToEmployeeList();\n    });\n  }\n}\n","<h3>Create Employee</h3>\n<form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\" \n            [(ngModel)]=\"employee.firstName\" name=\"firstName\" required>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"lastName\" \n            [(ngModel)]=\"employee.lastName\" name=\"lastName\" required>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"emailId\">Email Id</label>\n        <input type=\"text\" class=\"form-control\" id=\"emailId\" \n            [(ngModel)]=\"employee.emailId\" name=\"emailId\" required>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n</form>"],"mappings":"AACA,SAASA,QAAQ,QAAQ,aAAa;;;;AAQtC,OAAM,MAAOC,uBAAuB;EAGlCC,YAAoBC,eAAiC;IAAjC,KAAAA,eAAe,GAAfA,eAAe;IAFnC,KAAAC,QAAQ,GAAc,IAAIJ,QAAQ,EAAE;EAEqB;EACzDK,QAAQA,CAAA,GAER;EACAC,QAAQA,CAAA,GAER;EACAC,YAAYA,CAAA;IACV,IAAI,CAACJ,eAAe,CAACK,cAAc,CAAC,IAAI,CAACJ,QAAQ,CAAC,CAACK,SAAS,CAACC,IAAI,IAAG;MAClEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAI,CAACG,gBAAgB,EAAE;IACzB,CAAC,CAAC;EACJ;;;uBAfWZ,uBAAuB,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA;IAAA;EAAA;;;YAAvBhB,uBAAuB;MAAAiB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTpCV,EAAA,CAAAY,cAAA,SAAI;UAAAZ,EAAA,CAAAa,MAAA,sBAAe;UAAAb,EAAA,CAAAc,YAAA,EAAK;UACxBd,EAAA,CAAAY,cAAA,cAA8B;UAAxBZ,EAAA,CAAAe,UAAA,sBAAAC,0DAAA;YAAA,OAAYL,GAAA,CAAAnB,QAAA,EAAU;UAAA,EAAC;UACzBQ,EAAA,CAAAY,cAAA,aAAwB;UACGZ,EAAA,CAAAa,MAAA,iBAAU;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACzCd,EAAA,CAAAY,cAAA,eAC+D;UAA3DZ,EAAA,CAAAe,UAAA,2BAAAE,gEAAAC,MAAA;YAAA,OAAAP,GAAA,CAAArB,QAAA,CAAA6B,SAAA,GAAAD,MAAA;UAAA,EAAgC;UADpClB,EAAA,CAAAc,YAAA,EAC+D;UAGnEd,EAAA,CAAAY,cAAA,aAAwB;UACEZ,EAAA,CAAAa,MAAA,gBAAS;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACvCd,EAAA,CAAAY,cAAA,gBAC6D;UAAzDZ,EAAA,CAAAe,UAAA,2BAAAK,iEAAAF,MAAA;YAAA,OAAAP,GAAA,CAAArB,QAAA,CAAA+B,QAAA,GAAAH,MAAA;UAAA,EAA+B;UADnClB,EAAA,CAAAc,YAAA,EAC6D;UAGjEd,EAAA,CAAAY,cAAA,cAAwB;UACCZ,EAAA,CAAAa,MAAA,gBAAQ;UAAAb,EAAA,CAAAc,YAAA,EAAQ;UACrCd,EAAA,CAAAY,cAAA,gBAC2D;UAAvDZ,EAAA,CAAAe,UAAA,2BAAAO,iEAAAJ,MAAA;YAAA,OAAAP,GAAA,CAAArB,QAAA,CAAAiC,OAAA,GAAAL,MAAA;UAAA,EAA8B;UADlClB,EAAA,CAAAc,YAAA,EAC2D;UAG/Dd,EAAA,CAAAY,cAAA,iBAA8C;UAAAZ,EAAA,CAAAa,MAAA,cAAM;UAAAb,EAAA,CAAAc,YAAA,EAAS;;;UAfrDd,EAAA,CAAAwB,SAAA,GAAgC;UAAhCxB,EAAA,CAAAyB,UAAA,YAAAd,GAAA,CAAArB,QAAA,CAAA6B,SAAA,CAAgC;UAMhCnB,EAAA,CAAAwB,SAAA,GAA+B;UAA/BxB,EAAA,CAAAyB,UAAA,YAAAd,GAAA,CAAArB,QAAA,CAAA+B,QAAA,CAA+B;UAM/BrB,EAAA,CAAAwB,SAAA,GAA8B;UAA9BxB,EAAA,CAAAyB,UAAA,YAAAd,GAAA,CAAArB,QAAA,CAAAiC,OAAA,CAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}